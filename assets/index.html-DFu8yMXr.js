import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,f as n,o as e}from"./app-DgPjH-V-.js";const t={};function l(d,s){return e(),a("div",null,s[0]||(s[0]=[n(`<p>参考：<a href="https://developer.aliyun.com/article/850913" target="_blank" rel="noopener noreferrer">2021最新阿里代码规范（前端篇）</a></p><h2 id="命名规范" tabindex="-1"><a class="header-anchor" href="#命名规范"><span>命名规范</span></a></h2><h3 id="文件命名" tabindex="-1"><a class="header-anchor" href="#文件命名"><span>文件命名</span></a></h3><table><thead><tr><th>方法类型</th><th>命名规则</th><th>示例</th></tr></thead><tbody><tr><td>组件</td><td>PascalCase.vue</td><td>UserProfile.vue</td></tr><tr><td>其他</td><td>全部采用小写方式，以中划线分割</td><td>user-profile.ts、user-avartar.svg</td></tr></tbody></table><hr><h3 id="方法命名" tabindex="-1"><a class="header-anchor" href="#方法命名"><span>方法命名</span></a></h3><table><thead><tr><th>方法类型</th><th>命名模式</th><th>示例</th></tr></thead><tbody><tr><td>数据获取</td><td>fetchXxx</td><td><code>fetchUserList</code></td></tr><tr><td>事件处理</td><td>handleXxx</td><td><code>handleSubmit</code></td></tr><tr><td>状态变更</td><td>updateXxx</td><td><code>updateLoadingStatus</code></td></tr><tr><td>表单验证</td><td>validate</td><td><code>validateEmailFormat</code></td></tr><tr><td>工具方法</td><td>动词+名词</td><td><code>formatCurrency</code></td></tr><tr><td>初始化操作</td><td>initializeXxx</td><td><code>initializeMap</code></td></tr><tr><td>数据处理</td><td>processXxx</td><td><code>processImageData</code></td></tr><tr><td>权限校验</td><td>checkXxxPermission</td><td><code>checkEditPermission</code></td></tr></tbody></table><hr><h2 id="导入顺序规范" tabindex="-1"><a class="header-anchor" href="#导入顺序规范"><span>导入顺序规范</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="shiki" data-ext="typescript" data-title="typescript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 1. 第三方库</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ElMessage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;element-plus&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">computed</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;vue&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 2. 项目工具类</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">getToken</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;@/utils/auth&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 3. Store模块</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">useUserStore</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;@/stores/user.ts&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 4. 类型定义</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">UserProfile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;@/types/user.d.ts&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 5. 父级组件</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> AppMain</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;@/layout/AppMain/index.vue&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 6. 同级组件</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> ProductCard</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;./ProductCard.vue&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="css-规范" tabindex="-1"><a class="header-anchor" href="#css-规范"><span>CSS 规范</span></a></h2><h3 id="bem规范" tabindex="-1"><a class="header-anchor" href="#bem规范"><span>BEM规范</span></a></h3><p>BEM（Block、Element、Modifier）是一种命名约定，用于描述组件的结构和状态。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>// Block: 定义功能模块</span></span>
<span class="line"><span>.form-container {</span></span>
<span class="line"><span>  // Element: 使用 __ 连接</span></span>
<span class="line"><span>  &amp;__item {</span></span>
<span class="line"><span>    padding: 12px;</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  // Modifier: 使用 -- 表示状态</span></span>
<span class="line"><span>  &amp;__item--disabled {</span></span>
<span class="line"><span>    opacity: 0.5;</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  // 子元素继续使用 BEM</span></span>
<span class="line"><span>  &amp;__label {</span></span>
<span class="line"><span>    font-weight: bold;</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="常用元素单词" tabindex="-1"><a class="header-anchor" href="#常用元素单词"><span>常用元素单词</span></a></h3><p>| 元素类型 | 命名 | |----------------|-------------|- | 导航栏 | navbar | | 侧边栏 | sidebar | | 按钮 | btn | | 表单 | form | | 容器 | container | | 包装器 | wrapper |</p>`,17)]))}const h=i(t,[["render",l],["__file","index.html.vue"]]),k=JSON.parse('{"path":"/standard/1.%E5%89%8D%E7%AB%AF%E8%A7%84%E8%8C%83/","title":"前端规范","lang":"zh-CN","frontmatter":{"title":"前端规范","icon":"palette","index":false,"dir":{"order":1,"collapsible":false,"expanded":true,"link":true},"category":["开发规范"],"tag":["前端规范"],"description":"参考：2021最新阿里代码规范（前端篇） 命名规范 文件命名 方法命名 导入顺序规范 CSS 规范 BEM规范 BEM（Block、Element、Modifier）是一种命名约定，用于描述组件的结构和状态。 常用元素单词 | 元素类型 | 命名 | |----------------|-------------|- | 导航栏 | navbar | ...","head":[["meta",{"property":"og:url","content":"https://www.youlai.tech/standard/1.%E5%89%8D%E7%AB%AF%E8%A7%84%E8%8C%83/"}],["meta",{"property":"og:site_name","content":"youlai"}],["meta",{"property":"og:title","content":"前端规范"}],["meta",{"property":"og:description","content":"参考：2021最新阿里代码规范（前端篇） 命名规范 文件命名 方法命名 导入顺序规范 CSS 规范 BEM规范 BEM（Block、Element、Modifier）是一种命名约定，用于描述组件的结构和状态。 常用元素单词 | 元素类型 | 命名 | |----------------|-------------|- | 导航栏 | navbar | ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-19T11:48:28.000Z"}],["meta",{"property":"article:tag","content":"前端规范"}],["meta",{"property":"article:modified_time","content":"2025-02-19T11:48:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"前端规范\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-19T11:48:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"有来技术\\",\\"url\\":\\"https://gitee.com/youlaiorg\\"}]}"]]},"headers":[{"level":2,"title":"命名规范","slug":"命名规范","link":"#命名规范","children":[{"level":3,"title":"文件命名","slug":"文件命名","link":"#文件命名","children":[]},{"level":3,"title":"方法命名","slug":"方法命名","link":"#方法命名","children":[]}]},{"level":2,"title":"导入顺序规范","slug":"导入顺序规范","link":"#导入顺序规范","children":[]},{"level":2,"title":"CSS 规范","slug":"css-规范","link":"#css-规范","children":[{"level":3,"title":"BEM规范","slug":"bem规范","link":"#bem规范","children":[]},{"level":3,"title":"常用元素单词","slug":"常用元素单词","link":"#常用元素单词","children":[]}]}],"git":{"createdTime":1737332918000,"updatedTime":1739965708000,"contributors":[{"name":"Ray.Hao","username":"Ray.Hao","email":"1490493387@qq.com","commits":2,"url":"https://github.com/Ray.Hao"}]},"readingTime":{"minutes":1.11,"words":333},"filePathRelative":"standard/1.前端规范/README.md","localizedDate":"2025年1月20日","autoDesc":true}');export{h as comp,k as data};
