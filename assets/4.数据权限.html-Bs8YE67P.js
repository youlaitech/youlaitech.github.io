import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,a,b as e,d as p,o as t}from"./app-BITlg6S3.js";const o="/assets/image/role_data_permission.png",l={},c=e("p",null,"本教程将指导你如何使用数据权限功能。",-1),i=p('<h2 id="数据权限设置" tabindex="-1"><a class="header-anchor" href="#数据权限设置"><span>数据权限设置</span></a></h2><ol><li>角色管理中的数据权限</li></ol><figure><img src="'+o+`" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><blockquote><p>可以看到数据权限一共有四种类型，分别是全部数据、部门及子部门数据、本部门数据和本人数据。</p></blockquote><ol start="2"><li>代码使用方式</li></ol><p>在mapper接口中使用注解<code>@DataPermission</code>，可以实现数据权限过滤。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>youlai<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>common<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">DataPermission</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@Mapper</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">DemoMapper</span> <span class="token keyword">extends</span> <span class="token class-name">BaseMapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Demo</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@DataPermission</span></span>
<span class="line">    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Demo</span><span class="token punctuation">&gt;</span></span> <span class="token function">queryList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>注解参数说明</li></ol><ul><li><code>deptAlias</code>：部门表别名，默认为\`\`</li><li><code>deptIdColumnName</code>：部门ID字段名，默认为<code>dept_id</code></li><li><code>userAlias</code>：用户表别名，默认为\`\`</li><li><code>userIdColumnName</code>：用户ID字段名，默认为<code>create_by</code></li></ul><p>使用示例：</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> demo d <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> other <span class="token keyword">on</span> d<span class="token punctuation">.</span>id <span class="token operator">=</span> o<span class="token punctuation">.</span>demo_id</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>如果在这个查询中加入数据权限过滤，并且demo表中有dept_id字段和create_by字段，那么可以这样写</p></blockquote><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>youlai<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>common<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">DataPermission</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@Mapper</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">DemoMapper</span> <span class="token keyword">extends</span> <span class="token class-name">BaseMapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Demo</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">   <span class="token annotation punctuation">@DataPermission</span><span class="token punctuation">(</span>deptAlias <span class="token operator">=</span> <span class="token string">&quot;d&quot;</span><span class="token punctuation">,</span> deptIdColumnName <span class="token operator">=</span> <span class="token string">&quot;dept_id&quot;</span><span class="token punctuation">,</span></span>
<span class="line">           userAlias <span class="token operator">=</span> <span class="token string">&quot;d&quot;</span><span class="token punctuation">,</span> userIdColumnName <span class="token operator">=</span> <span class="token string">&quot;create_by&quot;</span><span class="token punctuation">)</span></span>
<span class="line">   <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Demo</span><span class="token punctuation">&gt;</span></span> <span class="token function">queryList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中<code>deptIdColumnName</code>和<code>userIdColumnName</code>是可以不写，因为demo表中的字段和默认的一样，所以可以省略。 4. Mybatisplus中的使用方式</p><p>参考DeptMapper中的selectList方法</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token annotation punctuation">@Mapper</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">DeptMapper</span> <span class="token keyword">extends</span> <span class="token class-name">BaseMapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Dept</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@DataPermission</span><span class="token punctuation">(</span>deptIdColumnName <span class="token operator">=</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Dept</span><span class="token punctuation">&gt;</span></span> <span class="token function">selectList</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token class-name">Constants</span><span class="token punctuation">.</span><span class="token constant">WRAPPER</span><span class="token punctuation">)</span> <span class="token class-name">Wrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Dept</span><span class="token punctuation">&gt;</span></span> queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16);function u(d,r){return t(),n("div",null,[c,a(" more "),i])}const v=s(l,[["render",u],["__file","4.数据权限.html.vue"]]),b=JSON.parse('{"path":"/%E5%89%8D%E5%90%8E%E7%AB%AF%E6%A8%A1%E6%9D%BF/2.Java%E5%90%8E%E7%AB%AF/3.%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/4.%E6%95%B0%E6%8D%AE%E6%9D%83%E9%99%90.html","title":"数据权限","lang":"zh-CN","frontmatter":{"title":"数据权限","icon":"leaf","order":4,"category":["快速上手","项目简介"],"tag":["项目介绍"]},"headers":[{"level":2,"title":"数据权限设置","slug":"数据权限设置","link":"#数据权限设置","children":[]}],"git":{"createdTime":1722817005000,"updatedTime":1725944061000,"contributors":[{"name":"胡少翔","email":"971366405@qq.com","commits":4},{"name":"ray","email":"1490493387@qq.com","commits":1}]},"readingTime":{"minutes":1.09,"words":328},"filePathRelative":"前后端模板/2.Java后端/3.开发指南/4.数据权限.md","localizedDate":"2024年8月5日"}');export{v as comp,b as data};
